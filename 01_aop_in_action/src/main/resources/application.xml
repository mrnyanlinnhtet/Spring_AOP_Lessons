<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


	<context:component-scan
		base-package="com.aop.repo,com.aop.service,com.aop.aspects">
	</context:component-scan>
	<aop:config proxy-target-class="true">


		<aop:aspect ref="methodAccessAscept">
			<aop:pointcut
				expression="execution(public void com.aop.service.*.*(..)) and args(names)"
				id="pointDoBusiness" />

			<aop:before method="beforeExecution"
				pointcut-ref="pointDoBusiness" arg-names="names" />

			<aop:after method="afterExecution" arg-names="names"
				pointcut-ref="pointDoBusiness" />
			<aop:after-returning method="afterReturning"
				returning="student" pointcut="execution(* getStudent())" />
			<aop:after-throwing method="afterThrowing"
				pointcut="execution(* dividedBy(..))" throwing="e" />
		</aop:aspect>
	</aop:config>
	<bean id="methodAccessAscept"
		class="com.aop.aspects.MethodAccessAspects">
	</bean>
</beans>
